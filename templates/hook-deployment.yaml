apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "hook.name" . }}
  labels:
    app: {{ template "hook.name" . }}
spec:
  replicas: {{ .Values.hook.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
{{- if .Values.hook.datadog.enabled }}
      annotations:
        ad.datadoghq.com/hook.logs: '[{"source":"prow","service":"hook"}]'
{{- end }}
      labels:
        app: {{ template "hook.name" . }}
    spec:
      hostAliases:
      - ip: "192.168.1.167"
        hostnames:
        - "github.com"
        - "api.github.com"
        - "www.github.com"
        - "github.io"
        - "githubusercontent.com"
        - "developer.github.com"

      serviceAccountName: {{ template "hook.name" . }}
      terminationGracePeriodSeconds: {{ .Values.hook.terminationGracePeriodSeconds }}
      containers:
      - name: {{ template "hook.name" . }}
        image: {{ tpl .Values.hook.image.repository . }}:{{ tpl .Values.hook.image.tag . }}
        imagePullPolicy: {{ .Values.hook.imagePullPolicy }}
{{ if .Values.hook.args }}
        args:
{{ toYaml .Values.hook.args | indent 10 }}
{{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.hook.service.internalPort }}
            protocol: TCP
        livenessProbe:
          httpGet:
            path: {{ .Values.hook.probe.path }}
            port: http
        readinessProbe:
          httpGet:
            path: {{ .Values.hook.probe.path }}
            port: http
{{- if .Values.hook.env }}
        env:
{{- range $pkey, $pval := .Values.hook.env }}
        - name: {{ $pkey }}
          value: {{ $pval }}
{{- end }}
{{- end }}
        resources:
{{ toYaml .Values.hook.resources | indent 10 }}
        volumeMounts:
        - name: hmac
          mountPath: /etc/webhook
          readOnly: true
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
      volumes:
      - name: hmac
        secret:
          secretName: hmac-token
      - name: oauth
        secret:
          secretName: oauth-token
      - name: config
        configMap:
          name: config
      - name: plugins
        configMap:
          name: plugins
    {{- with .Values.hook.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.hook.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.hook.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
